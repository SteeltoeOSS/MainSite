@page "/quickstart"

	<Breadcrumbs NavName="Quickstart"
							 ShowGetStarted="false" />
<Tutorial>
	<Title>Steeltoe Quickstart</Title>
	<Description>Get starter quickly ans easily with Steeltoe.</Description>
	<TutorialSteps>
		<div class="row">
			<div class="col-12 getting-started-header bold">Prerequisites.</div>
		</div>
		<div class="row">
			<div class="col-12">
				You'll need access to Tanzu Application Services to complete this guide. If you don't already have credentials and the URL to app manager, create a free account <Href href="https://run.pivotal.io/" target="_blank">here</Href>.
			</div>
		</div>
		<div class="row">
			<div class="col-12 getting-started-header">First, <b>start a Zipkin instance</b>.</div>
		</div>
		<div class="row">
			<div class="col-12">
				<TabSet>
					<Steeltoe.Client.Components.StartInstanceTab.CloudFoundry InstanceName="@InstanceName" ServiceName="Zipkin" ShowServiceLookup="false">
						<CfCreateServiceCmd>cf push @InstanceName --docker-image steeltoeoss/zipkin</CfCreateServiceCmd>
						<AdditionalSteps>
							<li>Once the app is deployed and the Zipkin server is started, the cf cli will print out the public route. An example route would be <code>mytracingexample.cfapps.io</code>. You will need this value below.</li>
						</AdditionalSteps>
					</Steeltoe.Client.Components.StartInstanceTab.CloudFoundry>
				</TabSet>
			</div>
		</div>
		<div class="row">
			<div class="col-12 getting-started-header">Next, <b>create a .NET Core WebAPI</b> with the correct Steeltoe dependencies.</div>
		</div>
		<div class="row">
			<div class="col-12 getting-started-ordered-list">
				<ol>
					<li>
						<Steeltoe.Client.Components.AppSettingsTab.Initiallizr ImageName="actuators.png" ProjectName="@ProjectName" DependencyName="Actuators, DynamicLogging" />
					</li>
					<li>Extract the zipped project and open in your IDE of choice (we use Visual Studio)</li>
					<li>
						Add the other needed actuators in <b>startup.cs</b>
<pre><code>using Steeltoe.Management.Endpoint.Metrics;
using Steeltoe.Management.Tracing;
using Steeltoe.Management.Exporter.Tracing;

...

public class Startup
{
  public Startup(IConfiguration configuration)
  {
		Configuration = configuration;
  }

  public IConfiguration Configuration { get; }

  // This method gets called by the runtime. Use this method to add services to the container.
  public void ConfigureServices(IServiceCollection services)
  {
    services.AddPrometheusActuator(Configuration);
    services.AddMetricsActuator(Configuration);
    services.AddDistributedTracing(Configuration);
    services.AddZipkinExporter(Configuration);
    services.AddControllers();
  }
 
  // This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
  public void Configure(IApplicationBuilder app, IWebHostEnvironment env)
  {
    if (env.IsDevelopment())
    {
			app.UseDeveloperExceptionPage();
    }
		app.UsePrometheusActuator();
		app.UseMetricsActuator();
		app.UseTracingExporter();
		app.UseRouting();
    app.UseEndpoints(endpoints =>
    {
			endpoints.MapControllers();
    });
  }
}</code></pre>
					</li>
					<li>
						Set the actuator path, exposure, and zipkin server address in <b>appsettings.json</b>
						<pre><code>{
  "Logging": {
    "LogLevel": {
      "Default": "Debug",
      "System": "Information",
      "Microsoft": "Information"
    }
  },
  "spring": {
    "application": {
      "name": "@ProjectName"
    }
  },
  "management": {
    "endpoints": {
      "actuator": {
        "exposure": {
          "include": [ "*" ]
        }
      },
      "path": "/",
      "cloudfoundry": {
        "validateCertificates": false
      }
    },
    "metrics": {
      "exporter": {
        "cloudfoundry": {
          "validateCertificates": false
        }
      }
    },
    "tracing": {
      "alwaysSample": true,
      "useShortTraceIds ": true,
      "exporter": {
        "zipkin": {
          "endpoint": "http://&lt;ZIPKIN_SERVER_ROUTE&gt;/api/v2/spans",
          "validateCertificates": false
        }
      }
    }
  }
}</code></pre>
					</li>
					<li>
						<div>Run the application</div>
						<div>
							<TabSet>
								<Steeltoe.Client.Components.RunAppTab.CloudFoundry ProjectName="@ProjectName" InstanceName="@InstanceName" NoCFServices="true" NoPackageManager="true">
									<AdditionalSteps>
										<li>
											With the application successfully pushed, navigate to App Manager to see the new features enabled.
											<img src="images/initializr/actuators-app-manager.png" class="img-fluid" />
										</li>
									</AdditionalSteps>
								</Steeltoe.Client.Components.RunAppTab.CloudFoundry>
							</TabSet>
						</div>
					</li>
					<li>
						Now that you have successfully run a request through the app, navigate back to the zipkin dashboard and click the "Find Traces" button. This will search for recent traces. The result should show the trace for your request.
						<img src="images/initializr/zipkin-search.png" class="img-fluid" />
					</li>
					<li>
						Clicking on that trace will drill into the details. Then clicking on a specific action within the trace will give you even more detail.
						<img src="images/initializr/zipkin-detail.png" class="img-fluid" />
					</li>
				</ol>
			</div>
		</div>
	</TutorialSteps>
</Tutorial>

@code
{
	//private string ServiceName = "appmanager";
	private const string InstanceName = "myappmanagerservice";
	private const string ProjectName = "TAS_Observability";
}
