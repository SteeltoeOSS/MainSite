trigger:
  branches:
    include:
      - main

stages:
- stage: pr
  displayName: PR Sanity Check
  condition:
    eq(variables['build.reason'], 'PullRequest')
  jobs:
  - job:
    displayName: Build Solution
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: DotNetCoreCLI@2
      displayName: dotnet restore
      inputs:
        command: restore
        projects: src/Steeltoe-MainSite.sln
    - task: DotNetCoreCLI@2
      displayName: dotnet build
      inputs:
        command: build
        projects: src/Steeltoe-MainSite.sln
        arguments: --no-restore -c Release -v n
- stage: deploy
  displayName: Deploy
  condition:
    not(eq(variables['build.reason'], 'PullRequest'))
  jobs:
  - job: deploy
    displayName: Deploy
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: Docker@2
      displayName: Build and Push Docker Image
      inputs:
        command: buildAndPush
        containerRegistry: SteeltoeContainerRegistry
        repository: main-site
        tags: |
          $(Build.BuildId)
          latest
    - task: ShellScript@2
      displayName: Generate Staging Manifest
      inputs:
        scriptPath: ./yttw.sh
        args: >
          -f kubernetes
          -v image_tag=$(Build.BuildId)
          -v hostname=dev.steeltoe.io
          -v dotnet_environment=Staging
          --output-files manifests/staging
    - task: ShellScript@2
      displayName: Generate Production Manifest
      inputs:
        scriptPath: ./yttw.sh
        args: >
          -f kubernetes
          -v image_tag=$(Build.BuildId)
          -v replica_count=2
          -v hostname=steeltoe.io
          -v www_hostname=www.steeltoe.io
          -v dotnet_environment=Production
          --output-files manifests/production
    - task: PublishPipelineArtifact@1
      displayName: Publish Manifests
      inputs:
        targetPath: manifests
        artifactName: manifests
